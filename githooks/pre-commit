#!/usr/bin/env bash

# Find the .go files that are being modified by this change. Exclude the
# auto-generated .pb.go files.
gofiles=$(git diff --cached --name-only --diff-filter=ACM | grep '.go$' | grep -v '.pb.go$' | grep -v 'embedded.go$')
if [ "${GO_SKIP_PRECOMMIT_CHECKS}" != "1" -a -n "${gofiles}" ]; then
  # Check for formatting errors.
  unformatted=$(goimports -l ${gofiles})
  if [ -n "${unformatted}" ]; then
    # Some files are not gofmt'd. Print message and fail.
    echo -e >&2 "\nGo files must be formatted with goimports. Please run:"
    for fn in ${unformatted}; do
      echo >&2 "  goimports -w $fn"
    done
    exit 1
  fi

  # Check for lint errors.
  found_lint=0
  for gofile in ${gofiles}
  do
      lint_errors=$(golint ${gofile} 2>&1)
      if [ -n "${lint_errors}" ]; then
          if [ ${found_lint} -eq 0 ]; then
              echo -e >&2 "\nGo files with lint errors:"
              found_lint=1
          fi
          echo >&2 "  golint ${gofile}"
      fi
  done
  if [ ${found_lint} -eq 1 ]; then
      exit 1
  fi

  # Check for vet errors.
  unvetted=$(go tool vet ${gofiles} 2>&1 | awk -F: '{print $1}' | uniq)
  if [ -n "${unvetted}" ]; then
    echo -e >&2 "\nGo files with vet errors:"
    for fn in ${unvetted}; do
      echo >&2 "  go vet $fn"
    done
    exit 1
  fi
fi
